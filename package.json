{
  "name": "cloudmusic",
  "displayName": "cloudmusic",
  "description": "Netease Music for VS Code",
  "version": "1.6.1",
  "publisher": "YXL",
  "engines": {
    "vscode": "^1.46.0"
  },
  "license": "SEE LICENSE IN LICENSE",
  "categories": [
    "Other"
  ],
  "extensionKind": [
    "ui",
    "workspace"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/YXL76/cloudmusic-vscode"
  },
  "keywords": [
    "网易云",
    "网易云音乐",
    "music",
    "cloudmusic",
    "Netease Music"
  ],
  "preview": true,
  "activationEvents": [
    "onView:playlist",
    "onView:queue"
  ],
  "icon": "media/icon-300.png",
  "main": "./dist/extension.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "cloudmusic",
          "title": "cloudmusic",
          "icon": "media/disc.svg"
        }
      ]
    },
    "views": {
      "cloudmusic": [
        {
          "id": "userPlaylist",
          "name": "use playlist"
        },
        {
          "id": "favoritePlaylist",
          "name": "favorite playlist"
        },
        {
          "id": "queue",
          "name": "queue"
        }
      ]
    },
    "commands": [
      {
        "command": "cloudmusic.signin",
        "title": "Cloudmusic: Sign in"
      },
      {
        "command": "cloudmusic.signout",
        "title": "Cloudmusic: Sign Out"
      },
      {
        "command": "cloudmusic.dailyCheck",
        "title": "Cloudmusic: Daily check"
      },
      {
        "command": "cloudmusic.previous",
        "title": "Cloudmusic: Previous"
      },
      {
        "command": "cloudmusic.next",
        "title": "Cloudmusic: Next"
      },
      {
        "command": "cloudmusic.play",
        "title": "Cloudmusic: Play"
      },
      {
        "command": "cloudmusic.like",
        "title": "Cloudmusic: Like"
      },
      {
        "command": "cloudmusic.volume",
        "title": "Cloudmusic: Volume"
      },
      {
        "command": "cloudmusic.refreshPlaylist",
        "title": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "command": "cloudmusic.refreshPlaylistContent",
        "title": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "command": "cloudmusic.playPlaylist",
        "title": "Play",
        "icon": "$(play)"
      },
      {
        "command": "cloudmusic.addPlaylist",
        "title": "Add",
        "icon": "$(plus)"
      },
      {
        "command": "cloudmusic.clearQueue",
        "title": "Clear",
        "icon": "$(clear-all)"
      },
      {
        "command": "cloudmusic.randomQueue",
        "title": "Shuffle",
        "icon": "$(sort-precedence)"
      },
      {
        "command": "cloudmusic.intelligence",
        "title": "Intelligence",
        "icon": "$(pulse)"
      },
      {
        "command": "cloudmusic.addSong",
        "title": "Add",
        "icon": "$(add)"
      },
      {
        "command": "cloudmusic.playSongWithPlaylist",
        "title": "Play",
        "icon": "$(play)"
      },
      {
        "command": "cloudmusic.playSong",
        "title": "Play",
        "icon": "$(play)"
      },
      {
        "command": "cloudmusic.deleteSong",
        "title": "Delete",
        "icon": "$(remove)"
      },
      {
        "command": "cloudmusic.deleteFromPlaylist",
        "title": "Delete from playlist"
      },
      {
        "command": "cloudmusic.addToPlaylist",
        "title": "Add to playlist"
      },
      {
        "command": "cloudmusic.playDetail",
        "title": "Play detail"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "cloudmusic.refreshPlaylist",
          "when": "view == userPlaylist || view == favoritePlaylist",
          "group": "navigation"
        },
        {
          "command": "cloudmusic.clearQueue",
          "when": "view == queue",
          "group": "navigation"
        },
        {
          "command": "cloudmusic.randomQueue",
          "when": "view == queue",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "cloudmusic.refreshPlaylistContent",
          "when": "view == userPlaylist && viewItem == PlaylistItemTreeItem || view == favoritePlaylist && viewItem == PlaylistItemTreeItem",
          "group": "inline"
        },
        {
          "command": "cloudmusic.playPlaylist",
          "when": "view == userPlaylist && viewItem == PlaylistItemTreeItem || view == favoritePlaylist && viewItem == PlaylistItemTreeItem",
          "group": "inline"
        },
        {
          "command": "cloudmusic.addPlaylist",
          "when": "view == userPlaylist && viewItem == PlaylistItemTreeItem || view == favoritePlaylist && viewItem == PlaylistItemTreeItem",
          "group": "inline"
        },
        {
          "command": "cloudmusic.addSong",
          "when": "view == userPlaylist && viewItem == QueueItemTreeItem || view == favoritePlaylist && viewItem == QueueItemTreeItem",
          "group": "inline"
        },
        {
          "command": "cloudmusic.intelligence",
          "when": "view == userPlaylist && viewItem == QueueItemTreeItem || view == favoritePlaylist && viewItem == QueueItemTreeItem",
          "group": "inline"
        },
        {
          "command": "cloudmusic.playSongWithPlaylist",
          "when": "view == userPlaylist && viewItem == QueueItemTreeItem || view == favoritePlaylist && viewItem == QueueItemTreeItem",
          "group": "inline"
        },
        {
          "command": "cloudmusic.playSong",
          "when": "view == queue && viewItem == QueueItemTreeItem",
          "group": "inline"
        },
        {
          "command": "cloudmusic.deleteSong",
          "when": "view == queue && viewItem == QueueItemTreeItem",
          "group": "inline"
        },
        {
          "command": "cloudmusic.deleteFromPlaylist",
          "when": "view == userPlaylist && viewItem == QueueItemTreeItem || view == favoritePlaylist && viewItem == QueueItemTreeItem"
        },
        {
          "command": "cloudmusic.addToPlaylist",
          "when": "viewItem == QueueItemTreeItem"
        }
      ]
    },
    "configuration": [
      {
        "title": "Cloudmusic",
        "properties": {
          "cloudmusic.account.autoCheck": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Auto check when extension is active",
            "scope": "window"
          },
          "cloudmusic.cache.size": {
            "type": "number",
            "default": 1024,
            "markdownDescription": "Set maximum cache size (`128 ~ 10240 MB`)",
            "scope": "window"
          },
          "cloudmusic.music.proxy": {
            "type": "string",
            "default": "",
            "markdownDescription": "See [可以使用代理](https://binaryify.github.io/NeteaseCloudMusicApi/#/?id=%e5%8f%af%e4%bb%a5%e4%bd%bf%e7%94%a8%e4%bb%a3%e7%90%86)",
            "scope": "window"
          },
          "cloudmusic.music.quality": {
            "type": "number",
            "default": 192000,
            "markdownDescription": "Choose your prefer music quality",
            "enum": [
              128000,
              192000,
              320000,
              999000
            ],
            "enumDescriptions": [
              "Low Quality",
              "Medium Quality",
              "High Quality",
              "Lossless Quality"
            ],
            "scope": "window"
          },
          "cloudmusic.player.player": {
            "type": "string",
            "default": "vlc",
            "markdownDescription": "Choose your default player",
            "enum": [
              "vlc",
              "mpv"
            ],
            "enumDescriptions": [
              "vlc player",
              "mpv player"
            ],
            "scope": "window"
          },
          "cloudmusic.player.ignoreConfig": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Open player without config",
            "scope": "window"
          },
          "cloudmusic.player.interface": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Choose whether player will show interface",
            "scope": "window"
          },
          "cloudmusic.player.mpv.path": {
            "type": "string",
            "default": "",
            "markdownDescription": "Provied path to a mpv binary instead of using the one found in `$PATH`",
            "scope": "window"
          },
          "cloudmusic.player.vlc.path": {
            "type": "string",
            "default": "",
            "markdownDescription": "Provied path to a vlc binary instead of using the one found in `$PATH`",
            "scope": "window"
          },
          "cloudmusic.player.vlc.httpPort": {
            "type": "number",
            "default": 9280,
            "markdownDescription": "",
            "scope": "window"
          },
          "cloudmusic.player.vlc.httpPass": {
            "type": "string",
            "default": "",
            "markdownDescription": "",
            "scope": "window"
          }
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "node pre-webpack.js && webpack --mode production",
    "webpack": "node pre-webpack.js && webpack --mode development",
    "webpack-dev": "node pre-webpack.js && webpack --mode development --watch",
    "test": "tsc -p ./",
    "lint": "eslint . --ext .ts,.tsx"
  },
  "devDependencies": {
    "@types/glob": "^7.1.2",
    "@types/mocha": "^7.0.2",
    "@types/node": "^14.0.14",
    "@types/vscode": "^1.46.0",
    "@typescript-eslint/eslint-plugin": "^3.5.0",
    "@typescript-eslint/parser": "^3.5.0",
    "eslint": "^7.4.0",
    "glob": "^7.1.6",
    "mocha": "^8.0.1",
    "ts-loader": "^7.0.5",
    "typescript": "^3.9.6",
    "vscode-test": "^1.4.0",
    "webpack": "^4.43.0",
    "webpack-cli": "^3.3.12"
  },
  "dependencies": {
    "@thejellyfish/binary-search": "^1.0.4",
    "NeteaseCloudMusicApi": "^3.34.1",
    "array-unsort": "^1.1.5",
    "cacache": "^15.0.4",
    "command-exists": "^1.2.9",
    "del": "^5.1.0",
    "lru-cache": "^5.1.1",
    "mobx": "^5.15.4",
    "node-mpv": "^2.0.0-beta.0",
    "vlc-player-controller": "^0.0.5"
  }
}
