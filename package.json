{
  "name": "cloudmusic",
  "displayName": "cloudmusic",
  "description": "网易云音乐插件",
  "version": "1.1.0",
  "publisher": "YXL",
  "engines": {
    "vscode": "^1.46.0"
  },
  "license": "SEE LICENSE IN LICENSE",
  "categories": [
    "Other"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/YXL76/cloudmusic-vscode"
  },
  "keywords": [
    "网易云",
    "网易云音乐",
    "music",
    "cloudmusic",
    "Netease Music"
  ],
  "preview": true,
  "activationEvents": [
    "onView:playlist",
    "onView:queue"
  ],
  "icon": "media/icon.png",
  "main": "./dist/extension.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "cloudmusic",
          "title": "cloudmusic",
          "icon": "media/disc.svg"
        }
      ]
    },
    "views": {
      "cloudmusic": [
        {
          "id": "playlist",
          "name": "playlist"
        },
        {
          "id": "queue",
          "name": "queue"
        }
      ]
    },
    "commands": [
      {
        "command": "cloudmusic.signin",
        "title": "Cloudmusic: Sign in"
      },
      {
        "command": "cloudmusic.signout",
        "title": "Cloudmusic: Sign Out"
      },
      {
        "command": "cloudmusic.dailySignin",
        "title": "Cloudmusic: Daily sign in"
      },
      {
        "command": "cloudmusic.previous",
        "title": "Cloudmusic: Previous"
      },
      {
        "command": "cloudmusic.next",
        "title": "Cloudmusic: Next"
      },
      {
        "command": "cloudmusic.play",
        "title": "Cloudmusic: Play"
      },
      {
        "command": "cloudmusic.like",
        "title": "Cloudmusic: Like"
      },
      {
        "command": "cloudmusic.volume",
        "title": "Cloudmusic: Volume"
      },
      {
        "command": "cloudmusic.refreshPlaylist",
        "title": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "command": "cloudmusic.refreshPlaylistContent",
        "title": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "command": "cloudmusic.playPlaylist",
        "title": "Play",
        "icon": "$(play)"
      },
      {
        "command": "cloudmusic.addPlaylist",
        "title": "Add",
        "icon": "$(plus)"
      },
      {
        "command": "cloudmusic.clearQueue",
        "title": "Clear",
        "icon": "$(clear-all)"
      },
      {
        "command": "cloudmusic.randomQueue",
        "title": "Shuffle",
        "icon": "$(sort-precedence)"
      },
      {
        "command": "cloudmusic.intelligence",
        "title": "Intelligence",
        "icon": "$(pulse)"
      },
      {
        "command": "cloudmusic.addSong",
        "title": "Add",
        "icon": "$(add)"
      },
      {
        "command": "cloudmusic.playSongWithPlaylist",
        "title": "Play",
        "icon": "$(play)"
      },
      {
        "command": "cloudmusic.playSong",
        "title": "Play",
        "icon": "$(play)"
      },
      {
        "command": "cloudmusic.deleteSong",
        "title": "Delete",
        "icon": "$(remove)"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "cloudmusic.refreshPlaylist",
          "when": "view == playlist",
          "group": "navigation"
        },
        {
          "command": "cloudmusic.clearQueue",
          "when": "view == queue",
          "group": "navigation"
        },
        {
          "command": "cloudmusic.randomQueue",
          "when": "view == queue",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "cloudmusic.refreshPlaylistContent",
          "when": "view == playlist && viewItem == PlaylistItemTreeItem",
          "group": "inline"
        },
        {
          "command": "cloudmusic.playPlaylist",
          "when": "view == playlist && viewItem == PlaylistItemTreeItem",
          "group": "inline"
        },
        {
          "command": "cloudmusic.addPlaylist",
          "when": "view == playlist && viewItem == PlaylistItemTreeItem",
          "group": "inline"
        },
        {
          "command": "cloudmusic.addSong",
          "when": "view == playlist && viewItem == PlaylistContentTreeItem",
          "group": "inline"
        },
        {
          "command": "cloudmusic.intelligence",
          "when": "view == playlist && viewItem == PlaylistContentTreeItem",
          "group": "inline"
        },
        {
          "command": "cloudmusic.playSongWithPlaylist",
          "when": "view == playlist && viewItem == PlaylistContentTreeItem",
          "group": "inline"
        },
        {
          "command": "cloudmusic.playSong",
          "when": "view == queue && viewItem == QueueItemTreeItem",
          "group": "inline"
        },
        {
          "command": "cloudmusic.deleteSong",
          "when": "view == queue && viewItem == QueueItemTreeItem",
          "group": "inline"
        }
      ]
    },
    "configuration": [
      {
        "title": "Cloudmusic",
        "properties": {
          "cloudmusic.player.musicQuality": {
            "type": "number",
            "default": 192000,
            "enum": [
              128000,
              192000,
              320000,
              999000
            ],
            "enumDescriptions": [
              "",
              "",
              "",
              ""
            ],
            "scope": "window"
          },
          "cloudmusic.player.player": {
            "type": "string",
            "default": "vlc",
            "enum": [
              "vle",
              "mpv"
            ],
            "enumDescriptions": [
              "",
              ""
            ],
            "scope": "window"
          },
          "cloudmusic.player.mpvPath": {
            "type": "string",
            "default": "",
            "markdownDescription": "Provied path to a mpv binary instead of using the one found in `$PATH`",
            "scope": "window"
          },
          "cloudmusic.player.vlcPath": {
            "type": "string",
            "default": "",
            "markdownDescription": "Provied path to a vlc binary instead of using the one found in `$PATH`",
            "scope": "window"
          },
          "cloudmusic.player.vlcHttpPort": {
            "type": "number",
            "default": 9280,
            "markdownDescription": "",
            "scope": "window"
          },
          "cloudmusic.player.vlcHttpPass": {
            "type": "string",
            "default": "",
            "markdownDescription": "",
            "scope": "window"
          }
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "node pre-webpack.js && webpack --mode production",
    "webpack": "node pre-webpack.js && webpack --mode development",
    "webpack-dev": "node pre-webpack.js && webpack --mode development --watch",
    "test-compile": "tsc -p ./",
    "lint": "eslint . --ext .ts,.tsx"
  },
  "devDependencies": {
    "@types/glob": "^7.1.1",
    "@types/mocha": "^7.0.2",
    "@types/node": "^13.11.0",
    "@types/vscode": "^1.46.0",
    "@typescript-eslint/eslint-plugin": "^2.30.0",
    "@typescript-eslint/parser": "^2.30.0",
    "eslint": "^6.8.0",
    "glob": "^7.1.6",
    "mocha": "^7.1.2",
    "ts-loader": "^7.0.5",
    "typescript": "^3.8.3",
    "vscode-test": "^1.3.0",
    "webpack": "^4.43.0",
    "webpack-cli": "^3.3.12"
  },
  "dependencies": {
    "NeteaseCloudMusicApi": "^3.34.0",
    "array-unsort": "^1.1.5",
    "node-mpv": "^2.0.0-beta.0",
    "vlc-player-controller": "^0.0.1"
  }
}
